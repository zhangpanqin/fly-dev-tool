// 配置gradle 插件从哪里下载和来源
pluginManagement {
    repositories {
        mavenLocal()
        maven {
            url = 'https://maven.aliyun.com/repository/gradle-plugin'
        }
        maven {
            url = 'https://maven.aliyun.com/repository/spring-plugin'
        }
        gradlePluginPortal()
    }
}
dependencyResolutionManagement {
    repositories {
        repositories {
            mavenLocal()
            maven {
                name = 'maven center 和 jcenter 阿里云'
                url = 'https://maven.aliyun.com/repository/public'
            }
            maven {
                name = 'spring 阿里云'
                url = 'https://maven.aliyun.com/repository/spring'
            }
            maven {
                name = 'google 阿里云'
                url = 'https://maven.aliyun.com/repository/google'
            }
            mavenCentral()
        }
    }
    versionCatalogs {
        libs {
            version('spring-boot', '2.6.6')
            version('spring', '5.3.18')
            version('checkstyle', '10.0')
            version('pmd', '6.43.0')
            version('jacoco', '0.8.8')

            plugin('spring-boot', 'org.springframework.boot').version("${springBootVersion}")
            plugin('jib', 'com.google.cloud.tools.jib').version('3.2.1')
            plugin('dependency-check', 'org.owasp.dependencycheck').version('7.0.3')
            plugin('pact', 'au.com.dius.pact').version('4.4.0-beta.1')

            library('spring-boot-dependencies', 'org.springframework.boot', 'spring-boot-dependencies').versionRef('spring-boot')
            library('spring-reactive', 'org.springframework', 'spring-webflux').versionRef('spring')
            library('reactor-netty', 'io.projectreactor.netty', 'reactor-netty').version('1.0.17')

            library('logstash-logback-encoder', 'net.logstash.logback', 'logstash-logback-encoder').version('7.0.1')
            library('springdoc', 'org.springdoc', 'springdoc-openapi-ui').version('1.6.6')
            library('assertj', 'org.assertj', 'assertj-core').version('3.22.0')
            library('pact-consumer-junit5', 'au.com.dius.pact.consumer', 'junit5').version('4.2.9')
            library('reactor-test', 'io.projectreactor', 'reactor-test').version('3.4.16')
            library('mockito', 'org.mockito', 'mockito-core').version('4.4.0')
        }
    }
}
rootProject.name = 'java'
include 'spring-boot-demo'
include 'mflyyou-common'
